{"version":3,"file":"vivliostyle.js","sources":["../src/vivliostyle/constants.ts","../src/vivliostyle/logging.ts","../src/vivliostyle/plugin.ts","../src/vivliostyle/profile.ts","../src/vivliostyle/base.ts","../src/vivliostyle/cfi.ts","../src/vivliostyle/exprs.ts","../src/vivliostyle/css.ts","../src/vivliostyle/geometry-util.ts","../src/vivliostyle/css-prop.ts","../src/vivliostyle/counters.ts","../src/vivliostyle/css-tokenizer.ts","../src/vivliostyle/task.ts","../src/vivliostyle/task-util.ts","../src/vivliostyle/assets.ts","../src/vivliostyle/net.ts","../src/vivliostyle/css-parser.ts","../src/vivliostyle/matchers.ts","../src/vivliostyle/types.ts","../src/vivliostyle/diff.ts","../src/vivliostyle/pseudo-element.ts","../src/vivliostyle/vtree.ts","../src/vivliostyle/css-cascade.ts","../src/vivliostyle/css-logical-util.ts","../src/vivliostyle/sizing.ts","../src/vivliostyle/page-floats.ts","../src/vivliostyle/footnotes.ts","../src/vivliostyle/break.ts","../src/vivliostyle/layout-helper.ts","../src/vivliostyle/break-position.ts","../src/vivliostyle/display.ts","../src/vivliostyle/layout-processor.ts","../src/vivliostyle/layout-retryers.ts","../src/vivliostyle/layout-util.ts","../src/vivliostyle/shared.ts","../src/vivliostyle/layout.ts","../src/vivliostyle/repetitive-element.ts","../src/vivliostyle/table.ts","../src/vivliostyle/math-util.ts","../src/vivliostyle/columns.ts","../src/vivliostyle/css-validator.ts","../src/vivliostyle/css-styler.ts","../src/vivliostyle/font.ts","../src/vivliostyle/page-master.ts","../src/vivliostyle/css-page.ts","../src/vivliostyle/urls.ts","../src/vivliostyle/vgen.ts","../src/vivliostyle/xml-doc.ts","../src/vivliostyle/ops.ts","../src/vivliostyle/sha1.ts","../src/vivliostyle/toc.ts","../src/vivliostyle/epub.ts","../src/vivliostyle/adaptive-viewer.ts","../src/vivliostyle/core-viewer.ts","../src/vivliostyle/print.ts"],"sourcesContent":["/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (\n  p1: Base.JSON,\n) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\n      \"registerStartTiming\"\n    ] = this.registerStartTiming = registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern = /^[\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:\\p{Zs}*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r = /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r = /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n      url,\n    ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r = /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n      url,\n    ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\", \"-epub-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  // Special case\n  if (prop === \"writing-mode\") {\n    const probe = document.createElement(\"span\");\n    if (prefix === \"-ms-\") {\n      probe.style.setProperty(prefix + prop, \"tb-rl\");\n      return probe.style[\"writing-mode\"] === \"tb-rl\";\n    } else {\n      probe.style.setProperty(prefix + prop, \"vertical-rl\");\n      return probe.style[prefix + prop] === \"vertical-rl\";\n    }\n  } else {\n    const style = document.documentElement.style;\n    return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n  }\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"writing-mode\":\n      // Special case: prefer '-ms-writing-mode' to 'writing-mode'\n      if (checkIfPropertySupported(\"-ms-\", \"writing-mode\")) {\n        propNameMap[prop] = [\"-ms-writing-mode\"];\n        return [\"-ms-writing-mode\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      if (prefixed === \"-ms-writing-mode\") {\n        switch (value) {\n          case \"horizontal-tb\":\n            value = \"lr-tb\";\n            break;\n          case \"vertical-rl\":\n            value = \"tb-rl\";\n            break;\n          case \"vertical-lr\":\n            value = \"tb-lr\";\n            break;\n        }\n      } else if (prefixed === \"-webkit-text-combine\") {\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n      }\n      if (elem && (elem as HTMLElement).style) {\n        (elem as HTMLElement).style.setProperty(prefixed, value);\n      }\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  // FIXME: This property is added to reduce TypeScript error on `dependCore`\n  // but it is never initialized. Is it really correct code?\n  value: Val;\n\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.offset;\n        const pageLastOffset = Math.max(\n          pageStartOffset,\n          ...Array.from(\n            currentPage.container.querySelectorAll(\n              `[${Base.ELEMENT_OFFSET_ATTR}]`,\n            ),\n          ).map((e) => parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10)),\n        );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset = currentPage.container.querySelector(\n                    `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                  );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset = currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                    );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(\n    page: Vtree.Page,\n  ): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -ms-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nazimuth = ANGLE | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncue-after = URI_OR_NONE;\ncue-before = URI_OR_NONE;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nelevation = ANGLE | below | level | above | higher | lower;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-variant = normal | small-caps;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM ;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH;\nmax-width = NPLENGTH;\nmin-height = auto | PLENGTH;\nmin-width = auto | PLENGTH;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nPAUSE = POS_TIME | ZERO | POS_PERCENTAGE;\npause-after = PAUSE;\npause-before = PAUSE;\npitch-range = NUM;\npitch = FREQUENCY | x-low | low | medium | high | x-high;\nplay-during = [URI [ mix || repeat ]?] | auto | none;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nrichness = NUM;\nright = APLENGTH;\nspeak-header = once | always;\nspeak-numeral = digits | continuous;\nspeak-punctuation = code | none;\nspeech-rate = NUM | x-slow | slow | medium | fast | x-fast | faster | slower;\nstress = NUM;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nvoice-family = FAMILY_LIST;\nvolume = NUM | PERCENTAGE | silent | x-soft | soft | medium | loud | x-loud;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM ;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,ms,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | POS_NUM;\ninline-size = PAPLENGTH | POS_NUM;\nmax-block-size = NPLENGTH;\nmax-inline-size = NPLENGTH;\nmin-block-size = auto | PLENGTH;\nmin-inline-size = auto | PLENGTH;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx,ms]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub,ms]transform = none | TRANSFORM_FUNCTION+;\n[epub,ms]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto;\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-variant-east-asian = normal | [[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby];\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nfont-stretch = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a5 | a4 | a3 | b5 | b4 | jis-b5 | jis-b4 | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,ms]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[ms,webkit]line-break = auto | loose | normal | strict;\noverflow-wrap = normal | break-word;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz,ms]text-align-last = auto | start | end | left | right | center | justify;\n[ms]text-justify = auto | none | inter-word | inter-character | inter-ideograph /* specified in UA stylesheet for IE */;\n[ms]word-break = normal | keep-all | break-all | break-word;\n[ms]word-wrap = normal | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[ms,webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[ms,webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\n[ms]text-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[webkit]text-combine = none | horizontal;\n[epub,ms]text-combine-horizontal = none | all | [ digits POS_INT? ]; /* relaxed */\ntext-combine-upright = none | all | [ digits POS_INT? ]; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\n[ms]touch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-variant: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\npause = INSETS pause-before pause-after;\nfont = FONT font-style font-variant font-weight font-stretch /* font-size line-height font-family are special-cased */;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|body {\n  margin: 8px;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  request.withCredentials = true;\n  console.log('request in')\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n  flavor: StylesheetFlavor;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    this.handler.error(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.OrMedia(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery,\n    parsingFunctionParam,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          if (token.text.toLowerCase() == \"and\") {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            if (this.propName) {\n              this.actions = actionsPropVal;\n            } else {\n              this.exprError(\"E_CSS_UNBALANCED_PAR\", token);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints: Vtree.NodeContext[],\n    ): { edge: number; checkPoint: Vtree.NodeContext | null };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport { PageFloats, Selectors, Vtree, XmlDoc } from \"./types\";\nimport { PseudoelementStyler } from \"./pseudo-element\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: object,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: ShadowContext,\n  sc2: ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: ShadowContext;\n  nodeShadow: ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      nc.shadowContext.styler instanceof PseudoelementStyler\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  azimuth: true,\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  elevation: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  \"pitch-range\": true,\n  quotes: true,\n  richness: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"speak-header\": true,\n  \"speak-numeral\": true,\n  \"speak-punctuation\": true,\n  \"speech-rate\": true,\n  \"shape-rendering\": true,\n  stress: true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"voice-family\": true,\n  volume: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"word-wrap\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return !!this.condition.evaluate(context);\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem {\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack = this\n      .followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts = (this.currentFollowingSiblingTypeCounts =\n      followingSiblingTypeCountsStack[\n        followingSiblingTypeCountsStack.length - 1\n      ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver {\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition = PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext {\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent = this.parent.getLastFollowingFloatInFragments(\n        float,\n      );\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint {\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      floatReference,\n    );\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition {\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition {\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext {\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext = nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"LayoutIterator\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset {\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition {\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null = null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  computedBlockSize: number;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions = this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode = this.calculateOffsetInNodeForNodeContext(\n              position,\n            );\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe = containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n          \"div\",\n        );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft = area.paddingRight = area.paddingTop = area.paddingBottom = 0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext = this.pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments = context.getStashedFloatFragments(\n      floatReference,\n    );\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          stashedFragment.continuations[0].float,\n        );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n      nodeContext,\n    );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"processLineStyling\",\n    );\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            range.setStartBefore(node);\n            haveStart = true;\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing = this.findFirstOverflowingEdgeAndCheckPoint(\n      checkPoints,\n    );\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(\n    checkPoints: Vtree.NodeContext[],\n  ): { edge: number; checkPoint: Vtree.NodeContext | null } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch (flowPosition.sourceNode.namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent && nodeContext.parent.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            nodeContext.formattingContext,\n          );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (!this.layoutConstraint.allowLayout(nodeContext)) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (this.stopAtOverflow\n                    ? lastAfterNodeContext || nodeContext\n                    : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n            formattingContext,\n          );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n        formattingContext,\n      );\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext = this\n                  .nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats = this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder = this.column.calculateClonedPaddingBorder(\n      parentNodeContext,\n    );\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements {\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor {\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContextOrNull(\n      nodeContext,\n    );\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext = position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext {\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset {\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode = nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer = cellViewNode.ownerDocument.createElement(\n      \"div\",\n    );\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions = this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy = rowNodeContext.viewNode.ownerDocument.createElement(\n                  \"td\",\n                );\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n                cellNodePosition.steps[0],\n                rowNodeContext,\n              );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions[\n        cell.columnIndex\n      ];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (this.column\n          .layoutContext as Vgen.ViewFactory).xmldoc.getElementOffset(\n          tdNodeStep.node as Element,\n        );\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition = this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells = formattingContext.getRowSpanningCellsOverflowingTheRow(\n          rowIndex,\n        );\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext = cellFragment.findAcceptableBreakPosition()\n              .nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode = cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode = this.tableFormattingContext.getRootViewNode(\n      initialPosition,\n    );\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint {\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints = this.collectCellFragmentLayoutConstraints(\n      positionAfter,\n      formattingContext,\n    );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints: entry.fragment.pseudoColumn.getColumn()\n          .fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (this.nodes[0]\n        .validator as PrimitiveValidator).combine(\n        group.nodes[0].validator as PrimitiveValidator,\n      );\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\"font-family\", \"line-height\", \"font-size\");\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              propList.push(token.text);\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if ((this.atBlockStart || this.atFlowStart) && box.hasBox()) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n          }\n        }\n        this.context.rootFontSize = px;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore = box.afterBox.getBreakValue(\n                \"before\",\n              );\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-variant\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance\n> extends PageBox<I> {\n  pageMaster: PageMaster;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"font-variant\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>\n> extends PageBoxInstance<P> {\n  pageMasterInstance: PageMasterInstance;\n\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(\n      context: Exprs.Context,\n    ): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], \"\", style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver {\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, null, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext {\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createRefShadow\",\n    );\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> = Task.newFrame(\n      \"createShadows\",\n    );\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(\n    elementStyle: CssCascade.ElementStyle,\n  ): { lang: string | null; elementStyle: CssCascade.ElementStyle } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps = CssCascade.getPolyfilledInheritedProps().filter(\n      (name) => computedStyle[name],\n    );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute = Display.establishesCBForAbsolute(\n        position,\n      );\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"] || [\"word-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        overflowWrap === Css.ident.break_word;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak = this.processRepeatOnBreak(\n          computedStyle,\n        );\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              result.setAttribute(attributeName, attributeValue);\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext = new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n        parentFormattingContext,\n        this.nodeContext.sourceNode as Element,\n      );\n      (this.nodeContext\n        .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext).initializeRepetitiveElements(\n        this.nodeContext.vertical,\n      );\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      pos.sourceNode.namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    let contentShadow: Vtree.ShadowContext;\n    if (shadow.subShadow) {\n      contentShadow = shadow.subShadow;\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentShadow = shadow.parentShadow;\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      Base.setCSSProperty(target, propName, value.toString());\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> = new TaskUtil.Fetcher(\n  () => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  },\n  \"uaStylesheetBaseFetcher\",\n);\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer {\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n  actualPageWidth: number;\n  actualPageHeight: number;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          cascadedPageStyle = {}; // clear margin boxes\n          // TODO: support the :blank page selector\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition = this.layoutPositionAtPageStart.flowPositions[\n        parentFlowName\n      ];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy = new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated = pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats = pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition = this.getLastAfterPositionIfDeferredFloatsExists(\n                    column,\n                    newPosition,\n                  );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint = this.counterStore.createLayoutConstraint(\n      pageIndex,\n    );\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition = this.currentLayoutPosition.flowPositions[\n        flowNameStr\n      ];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> = Task.newFrame(\n      \"layoutFlowColumns\",\n    );\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer = this.viewport.document.createElement(\n          innerContainerTag,\n        );\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition = this.currentLayoutPosition.flowPositions[\n            flowNameStr\n          ];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle();\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> = Task.newFrame(\n      \"layoutNextPage\",\n    );\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n  slave: BaseParserHandler;\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> = Task.newFrame(\n      \"OPSDocStore.load\",\n    );\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] = Plugin.getHooksForName(\n            Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n          );\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList = xmldoc.document.querySelectorAll(\n            \"style, link, meta\",\n          );\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> = Task.newFrame(\n              \"fetchStylesheet\",\n            );\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              srcElem.parentElement.getAttribute(\n                \"data-vivliostyle-primary-entry\",\n              )\n            ) {\n              if (\n                !srcElem.querySelector(\n                  \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n                )\n              ) {\n                // When the TOC element is a part of the primaty entry (X)HTML,\n                // hide elements not containing TOC.\n                computedStyle[\"display\"] = Css.ident.none;\n              }\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n      if (\n        nonTocBoxDoc &&\n        nonTocBoxDoc.body &&\n        nonTocBoxDoc.body.getAttribute(\"data-vivliostyle-primary-entry\")\n      ) {\n        xmldoc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n      }\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURI(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURI(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder = manifestObj[\"readingOrder\"].includes(\n              itemObj,\n            );\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const param = {\n                url: Base.resolveURL(\n                  Base.convertSpecialURL(url),\n                  manifestUrl || this.pubURL,\n                ),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> = Task.newFrame(\n      \"renderSinglePage\",\n    );\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPage\",\n    );\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"renderPagesUpto\",\n    );\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToEPage\",\n    );\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateToCFI\",\n    );\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\n      \"navigateTo\",\n    );\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      if (target) {\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: -1,\n            offsetInItem: viewItem.xmldoc.getElementOffset(target),\n          },\n          sync,\n        ).thenFinish(frame);\n      } else if (position.spineIndex !== item.spineIndex) {\n        // no fragment, different spine item\n        this.findPage(\n          {\n            spineIndex: item.spineIndex,\n            pageIndex: 0,\n            offsetInItem: -1,\n          },\n          sync,\n        ).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[\n        spineIndex\n      ] = [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties = item.itemRefElement.getAttribute(\n        \"properties\",\n      );\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage = page;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle: this.opf.spine[this.pagePosition.spineIndex]\n                          .title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] = this.opf.spine[\n                          this.pagePosition.spineIndex\n                        ].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> = Task.newFrame(\n          \"moveTo.showCurrent\",\n        );\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> = Task.newFrame(\n              \"waitForCommand\",\n            );\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n"],"names":["PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","str","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","Array","from","e","shift","error","messages","buildMessageAndStackTrace","stack","concat","length","HOOKS","logger","opt_console","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","listeners","forEach","listener","addListener","push","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","index","indexOf","splice","getHooksForName","plugin","Profiler","performanceInstance","registerTiming","noop","registerStartTiming","registerEndTiming","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","timestamps","st","Object","keys","stamps","l","i","t","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","stripFragmentAndQuery","lastIndexOf","urlOption","j","replace","convertSpecialURL","exec","asString","v","toString","PriorityQueue","queue","add","item","parentIndex","Math","floor","parent","compare","peek","remove","result","curr","pop","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","probe","document","createElement","style","setProperty","documentElement","cssPropName","txt","toUpperCase","cssToJSProp","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","append","list","clear","join","escapeChar","charCodeAt","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeCharToHex","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","k","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","min","next","nextSibling","after","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","fromString","fragstr","decodeURIComponent","steps","charAt","parseInt","Base","navigate","doc","ref","slice","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","undefined","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","Const","one","_true","_false","builtIns","ceil","round","sqrt","max","x","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","values","Native","defineName","qualifiedName","val","defineFunc","funcs","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","getScopeContext","scope","scopes","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","pageAreaWidth","vh","pageAreaHeight","pageVertical","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","Negate","And","AndMedia","Or","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","appendValArray","expandedParams","expanded","expandValArray","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","Param","_this11","and","v1","v2","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","before","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Exprs","Empty","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","x1","y1","x2","y2","Point","y","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","rotatePoint","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","equals","spineIndex","pageIndex","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","setStyler","styler","getFragment","getTransformedId","transformedId","substring","getPageCounterVal","format","currentPageCounters","getCounterNumber","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","pageCounters","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","namedStringValues","offsets","sort","pageStartOffset","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","start","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","previousPageCounters","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","currentPageCountersStack","popPageCounters","unresolvedRefs","unresolvedReferences","resolvedRefs","resolvedReferences","pushed","referencesToSolve","newReferencesOfCurrentPage","some","finishPage","ids","oldPageIndex","pageIndicesById","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","referencesToSolveStack","popReferencesToSolve","pagesCounterExprs","exprContentListener","bind","findIndex","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","Asserts","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","EOF","makeActions","spec","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","NaN","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","token","tail","fillBuffer","nthToken","n","consume","mark","head","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","position","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","charCode","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","precededBySpace","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","setSlice","timeout","isTimeSliceOver","sliceOverTime","arm","inTimeSlice","newTime","scheduledTime","timeoutToken","wakeupTime","doTimeSlice","schedule","continuation","opt_delay","c","order","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","interrupt","waitTarget","getScheduler","isRunning","whenDone","unwind","exception","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","resource","piggibacks","piggybacks","arrived","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","VivliostyleViewportScreenCss","XMLHttpRequestResponseType","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","withCredentials","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","load","opt_required","opt_message","resources","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","pushHandler","slave","popHandler","tokenizer","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","exprContext","MEDIA","extractVals","sep","valStack","valStackReduce","count","exprError","propName","exprStackReduce","val2","tok","unshift","e1","e2","er","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","ruleStack","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","token1","parserLoop","propImportant","namespacePrefixToURI","defaultNamespaceURI","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","regionRule","pageRule","IMPORT","WHEN","importCondition","importReady","importURL","ruleName","rulePseudoName","errorBrackets","ErrorHandler","parseStylesheetFromText","media","parseMediaQuery","resolvedURL","innerFrame","parseStylesheetFromURL","parseStylesheet","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","takesOnlyNum","evaluateExprToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","changes","reduce","fastdiff","DELETE","resolveIndex","coef","diff","current","change","INSERT","EQUAL","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","DOMParser","parseFromString","SHADOW","pseudoNames","getPseudoName","setPseudoName","PseudoelementStyler","getStyle","deep","CssCascade","nest","processContent","styles","contentProcessed","contentVal","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","hrefHandler","anchorElement","preventDefault","setAutoPageWidth","isAuto","isAutoPageWidth","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","isAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","delayedItems","getElementClientRect","dimensions","trigger","observers","observer","event","zoom","getPageAreaElement","pageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","FlowChunk","linger","repeated","breakBefore","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","formattingContext","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","breakPenalty","floatReference","INLINE","hyphenateCharacter","breakWord","inheritedProps","vertical","direction","firstPseudo","resetView","clearSpacer","display","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","flexContainer","breakAfter","establishesBFC","containingBlockForAbsolute","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","cloneItem","np","captionSide","inlineBorderSpacing","blockBorderSpacing","overflow","create","modify","shared","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","newfp","positions","newarr","startSide","hasContent","LayoutPosition","newcp","highestSeenNode","highestSeenOffset","lookupPositionOffset","flows","flowPositions","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","getInsetTop","marginTop","borderTop","paddingTop","getInsetBottom","marginBottom","borderBottom","paddingBottom","getInsetLeft","marginLeft","borderLeft","paddingLeft","getInsetRight","marginRight","borderRight","paddingRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","originX","originY","innerShape","exclusions","computedBlockSize","snapWidth","snapHeight","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","assert","nonTrivialContent","azimuth","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","cursor","elevation","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","pitch-range","quotes","richness","ruby-align","ruby-position","speak-header","speak-numeral","speak-punctuation","speech-rate","shape-rendering","stress","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","voice-family","volume","white-space","widows","word-break","word-spacing","word-wrap","writing-mode","polyfilledInheritedProps","getPolyfilledInheritedProps","Plugin","POLYFILLED_INHERITED_PROPS","props","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","side","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isSpecialName","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","setPropName","getFontSize","parentFontSize","convertFontRelativeLengthToPx","convertFontSizeToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","_this12","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","additiveFormat","alphabeticNumbering","alphabetStr","alphabet","expandAlphabet","digit","alphabeticFormat","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseCounter","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","siblingTypeCountsStack","followingSiblingOrderStack","viewConditions","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","pageType","baseStyle","currentNSTag","currentEpubTypes","EMPTY","currentPageType","applyActions","defineCounter","scoping","counterScoping","pushCounters","displayVal","setMap","set","setVal","_this$currentElement","_this$currentElement2","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","siblingOrderStack","currentNamespaceTypeCounts","followingSiblingTypeCountsStack","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","footnoteContent","ActionClass","nthSelectorActionClasses","conditionCount","finishChain","SELECTOR","_CssParser$SlaveParse","insideSelectorRule","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","hook","converted","cascval","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","float","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","floatStore","getPreviousSibling","floatsDeferredFromPrevious","floatsDeferredToNext","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","forbiddenFloats","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","floatFragments","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","floatAnchors","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","locked","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","d","hasSameContainerAs","invalidated","layoutConstraints","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","stashedFloatFragments","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","fixBoxesForNode","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","isEdgeUpdated","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","initialPosition","clearNodes","sibling","initialBreakPositions","breakPositions","initialFragmentLayoutConstraints","fragmentLayoutConstraints","initialStateOfFormattingContext","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","calculatePseudoElementHeight","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","getTopEdge","startEdge","beforeEdge","getBottomEdge","endEdge","afterEdge","getLeftEdge","getRightEdge","isFloat","stopByOverflow","footnoteEdge","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","flowRootFormattingContext","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","parentBox","floatBoxMeasure","floatHorBox","dir","bottommostFloatTop","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","leftFloatEdge","rightFloatEdge","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","forceNonfitting","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","nodeContextOverflowingDueToRepetitiveElements","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","fixJustificationOnHyphen","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","overflown","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","end","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","nodeContextParam","lastAfterPosition","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","chunkPositions","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","pseudoParent","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","blockDistanceToBlockEndFloats","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","parentClonedPaddingBorder","startNodeContexts","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","DefaultLayoutMode","_LayoutRetryers$Abstr","initialOverflown","LayoutRetryers","processAfterIfContinuesOfAncestors","hasNextCandidate","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","floatMargins","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","setHeaderNodeContext","headerNodePosition","headerSourceNode","headerViewNode","setFooterNodeContext","footerNodePosition","footerSourceNode","footerViewNode","updateHeight","headerHeight","footerHeight","prepareLayoutFragment","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","allowInsertRepeatitiveElements","moveChildren","isAfterLastContent","findResultFromCache","afterLastContentNodeCache","isAfterNodeContextOf","lastContentSourceNode","affectedNodeCache","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","firstContentSourceNode","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","doneInitialLayout","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","appendHeader","appendFooter","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","eachAncestorNodeContext","repetitiveLayoutProcessor","getRepetitiveElementsOwnerFormattingContextOrNull","layoutEntireBlock","TableRow","rowIndex","addCell","cell","cells","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","setHeight","setAnchorSlot","slot","anchorSlot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","getAcceptableCellBreakPositions","acceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","rows","getRowSlots","rowSlots","slots","rowUpper","startColIndex","addCellFragment","uniqueCells","tableWidth","getColumnCount","columnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","isTableRowGrouping","isTableRoot","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","postLayoutBlockContents","captionView","captions","inHeaderOrFooter","inRow","computedStyle","lastRowViewNode","registerCheckPoint","TableLayoutStrategy","originalStopAtOverflow","resetColumn","getColSpanningCellWidth","colWidths","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","currentRowIndex","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","inHeader","inFooter","currentColumnIndex","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","colGroups","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","clearTableLayoutOptionCache","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","collectCellFragmentLayoutConstraints","cellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","totalBlockSize","originalPosition","checkPosition","isLastColumnLongerThanAnyOtherColumn","foundUpperBound","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","hasBox","beforeBox","styleValue","getBreakValue","buildAfterPseudoElementBox","afterBox","styleValues","cv","displayValue","isBlockValue","hasBoxValue","BoxStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","atStartStack","isAtFlowStart","encounteredTextNode","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","offsetMap","rootOffset","boxStack","getAttrStyle","postprocessTopStyle","bodyReached","primaryStack","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","rootStyle","elemStyle","isBody","rootBackgroundAssigned","backgroundColor","backgroundProps","backgroundImage","rootLayoutAssigned","columnProps","layoutProps","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","flowListener","flowChunks","encounteredFlowChunk","styleUntilFlowIsReached","flowToReach","idToReach","optionsCV","options","lingerCV","priorityCV","breakBeforeValues","flow","registerForcedBreakOffset","forcedBreakOffsets","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","beforePseudoBreakAfter","validator","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","ValidatingGroup","connect","nodeIndex","connections","what","group","clonedNode","connection","groupConnection","nomatch","addSpecialToArr","clause","ALWAYS_FAIL","failure","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","emptyHead","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","setOwner","syntaxNodeForProperty","syntax","propList","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","familyList","family","systemFonts","ValidatorSet","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","namedValidators","%","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","deg","grad","rad","turn","ms","Hz","kHz","stdfont","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","prefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","shorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","fillDefaults","Face","fontTraitKey","makeFontTraitKey","traitsEqual","makeAtRule","fontBytes","blobURL","createObjectURL","blobURLs","blobs","DocumentFaces","deobfuscator","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","familyMap","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","familyPrefix","getViewFontFamily","documentFaces","viewFamily","familyCounter","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","srcURLMap","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","_scope","parentInstance","param","copySpecified","specified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","pageMaster","isFunc","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","calculatedWidth","calculatedHeight","addNamedValues","namedValues","altName","namedFuncs","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","autoWidth","isAutoWidth","remains","initVertical","parentHeight","topBP","bottomBP","autoHeight","isAutoHeight","initColumns","toExprNormal","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","snapOffsetX","assignTopPosition","ypos","snapOffsetY","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","isTopDependentOnAutoHeight","sizeWithMaxWidth","isRightDependentOnAutoWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","pageMasterInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","toExprIdent","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a5","a4","a3","b5","b4","jis-b5","jis-b4","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","pageSize","PageRulePartition","bodyPartitionKey","createPageMarginBoxes","applySpecified","marginBoxesMap","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","_PageMaster$PageMaste2","setPageAreaDimension","pageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","marginBoxes","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","pageMarginBoxInstances","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","pageMasterCache","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","mergeInPageRule","PageParserHandler","pageProps","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","currentPageSelectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","content","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","dataset","iframe","contentWindow","navigator","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isAtForcedBreak","modifyElemDimensionWithImageResolution","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","propertiesNotPassedToDOM","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","parentElement","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","layoutBoxRect","getComputedStyle","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","NodeList","offsetStr","srcNode","getTotalOffset","totalOffset","buildIdMap","idMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","resolveContentType","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","faces","Font","rootPageFloatLayoutContext","CssStyler","stylerMap","CssPage","matchStartPageSide","pageManager","fontFace","pageSheetSize","isRectoStart","isLTR","getStyleForDoc","pageBoxInstances","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Columns","Vgen","pageBreaks","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","suppressEmptyBoxGeneration","outerShape","processLinger","startPage","noMorePrimaryFlows","layoutNextPage","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","createCornerMark","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","createCrossMark","isLeftPage","getTriggersForDoc","pageSheetWidth","pageSheetHeight","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","triggerSingleDocumentPreprocessing","styleByDocURL","triggersByDocURL","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","styleSheets","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","styleByKey","styleFetcherByKey","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","behavior","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","nonTocBoxDoc","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","makeDeobfuscatorFactory","plainXMLStore","jsonStore","deobfuscators","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfByURL","opfXML","encXML","zipMetadata","initWithXMLDoc","primaryOPFByEPubURL","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","documents","domain","removePath","startsWith","OPFItem","itemProperties","initWithElement","itemElem","opfURL","mediaType","propStr","initWithParam","skipPagesBefore","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","createDocumentURLTransformer","MATHML","path","items","restoreURL","encoded","unescapeCharFromHex","getMetadata","metadata","getPathFromURL","epubBaseURL","decodeURI","manifestURL","pkg","uidref","uidElem","uid","srcToFallbackId","fallback","cover","itemMap","itemMapByPath","fallbackSrc","spine","itemRefElement","tocAttr","ncxToc","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","bindings","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","readMetadata","prePaginated","sha1Sum","SHA1","blob","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","makeDeobfuscator","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","bytesToSHA1Bytes","encodedPath","compressed","compressedSize","obfuscation","DEFAULT","epage","epageCount","epageCountCallback","setEPageCountMode","epageIsRenderedPage","countEPages","offsetPerEPage","initWithChapters","itemref","primaryEntryPath","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","Counters","getPage","viewItem","spineItems","getCurrentPageProgression","finishPageContainer","oldPage","isFirstPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","isLastPage","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","spineItemLoadingContinuations","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","tagName","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","tocAutohide","tocView","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","needResize","pageReplacedListener","hyperlinkListener","pageRuleStyleElement","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","packageURL","touchActive","touchX","touchY","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","SINGLE_PAGE","waitForLoading","logLevel","setReadyState","command","Profile","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","vp","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","userAgent","opfView","setPageSize","setPageSizePageRules","pageSheetSizeAlreadySet","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","renderTask","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","setPrototypeOf","convertViewerOptions","CoreViewer","Navigation","settings","opt_options","adaptViewer_","dispatcher","autoResize","pageBorderWidth","setOptions","eventTarget","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","userAgentRootURL","convertSingleDocumentOptions","initialized","resolveNavigation","nav","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config"],"mappings":"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,sBACAA,0BACAA,0BAGAA,oBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,gBACAA,gBACAA,gBAGAA,0BACAA,8BACAA,wBACAA,wBACAA,4BACAA,0BACAA,sBACAA,sBACAA,sBACAA,0BACAA,0BACAA,oBApDF,CAAYA,KAAAA,YAsEA8I,GAfCC,GAOX,WALA7xB,sBAA2B,EAC3BA,SAAc,EACdA,UAAe,GACfA,cAAmB,EAGjBA,KAAKkL,KAAO4d,GAAUgJ,KA6F1B,SAAgBC,GAAYrK,EAAasK,GACvC,IACI5uB,EADElE,EAAcC,MAAM,KAE1B,IAAKiE,EAAI,EAAGA,EAAI,IAAKA,IACnBlE,EAAEkE,GAAKskB,EAGT,IADAxoB,EAAC,IAAQwoB,GAAOkK,GAAOK,IAAML,GAAOK,IAAML,GAAOM,QAC5C9uB,EAAI,EAAGA,EAAI4uB,EAAKpyB,OAAQwD,GAAK,EAChClE,EAAE8yB,EAAK5uB,IAAM4uB,EAAK5uB,EAAI,GAExB,OAAOlE,GAhGT,SAAY0yB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,QAsGZ,IAAaO,GAA0B,CACrCP,GAAOM,QACPN,GAAOM,QACPN,G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hE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAO4D,OACP5D,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAO4C,KACP5C,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAOgE,OACPhE,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAO8D,KACP9D,GAAOgE,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ACxB,YAAY83D,kBAAkBp7C,EAAKlK,QAErC,MACF,IAAK,iBACH,GAAIkK,EAAKlK,OAAOxS,QAAU,EACxB,YAAYi4D,uBAAuBv7C,EAAKlK,QAE1C,MACF,IAAK,kBACH,GAAIkK,EAAKlK,OAAOxS,QAAU,EACxB,YAAYq4D,wBAAwB37C,EAAKlK,QAE3C,MACF,IAAK,SACH,GAAIkK,EAAKlK,OAAOxS,QAAU,EACxB,YAAYu4D,gBAAgB77C,EAAKlK,QAEnC,MACF,IAAK,UACH,GAAIkK,EAAKlK,OAAOxS,QAAU,EACxB,YAAYw4D,iBAAiB97C,EAAKlK,QAKxC,OADAxQ,EAAenB,KAAK,sBAAuB6b,EAAKvW,gBACrCwhB,GAAQ,QAlQiBA,IAqS3B4uC,GAAoB,CAC/BqC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISrC,GAAsB,CACjCsC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGEp5C,GAAQ,CACnBq5C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRr4C,KAAM,IAmEKy2C,GAAwC,CACnDP,QAAQ,EACRF,OAAQ,aACRG,QAAS,MACTF,SAAU,KA4DZ,SAAgBqC,GAAU53B,EAAkB63B,GAC1C,IAAK,IAAM//B,KAAKkI,EACd63B,EAAI//B,GAAKkI,EAAIlI,GAAG+kB,YAmnBRib,GA/mBCC,cAAb,aACEt5D,aAAkB,EAClBA,cAAsC,GACtCA,UAAoB,GACpBA,YAAsB,GACtBA,eAAyB,GACzBA,aAAuB,GACvBA,SAAmB,GACnBA,eAAyB,GACzBA,WAAgB,EATlB,2BAWEo+C,MAAA,WACE,IAAM55C,EAAI,IAAI80D,EAEd,IAAK,IAAMjtD,KADX7H,EAAE8rD,QAAUtwD,KAAKswD,aACID,SACnB7rD,EAAE6rD,SAAShkD,GAAKrM,KAAKqwD,SAAShkD,GAShC,OAPA8sD,GAAUn5D,KAAKkwD,KAAM1rD,EAAE0rD,MACvBiJ,GAAUn5D,KAAKuwD,OAAQ/rD,EAAE+rD,QACzB4I,GAAUn5D,KAAKqxD,UAAW7sD,EAAE6sD,WAC5B8H,GAAUn5D,KAAKwnC,QAAShjC,EAAEgjC,SAC1B2xB,GAAUn5D,KAAKwvB,IAAKhrB,EAAEgrB,KACtB2pC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"}